import numpy as np
import matplotlib.pyplot as plt
import argparse

def main():
    # Parse command line arguments
    parser = argparse.ArgumentParser(description='Visualize transformed field coordinates')
    parser.add_argument('--guess_x', type=float, default=0, help='X coordinate of guess position')
    parser.add_argument('--guess_y', type=float, default=0, help='Y coordinate of guess position')
    parser.add_argument('--guess_heading', type=float, default=0, help='Heading angle in radians')
    args = parser.parse_args()
    
    # Constants from field.hpp
    WHITE_LINES_LENGTH = 882
    FIELD_WIDTH = 291
    FIELD_HEIGHT = 350
    GRID_SIZE = 1
    
    # Load white line coordinates from field.hpp
    white_lines = load_white_lines()
    
    # Fixed-point scaling factor (Q16.16 format)
    FP_SHIFT = 16
    FP_ONE = 1 << FP_SHIFT
    
    # Convert angles to fixed point representation
    sin_theta_fp = int(np.sin(-args.guess_heading) * FP_ONE)
    cos_theta_fp = int(np.cos(-args.guess_heading) * FP_ONE)
    
    # Arrays to store transformed coordinates
    transformed_x = []
    transformed_y = []
    
    # Transform & rotate white line coords
    for i in range(WHITE_LINES_LENGTH):
        x = white_lines[i][0]
        y = white_lines[i][1]
        
        # Transform to relative coordinates
        rel_x = int(x - args.guess_x / GRID_SIZE)
        rel_y = int(y - args.guess_y / GRID_SIZE)
        
        # Rotate using fixed-point arithmetic (ensure integer operations)
        rotated_x_fp = (rel_x * cos_theta_fp - rel_y * sin_theta_fp) >> FP_SHIFT
        rotated_y_fp = (rel_x * sin_theta_fp + rel_y * cos_theta_fp) >> FP_SHIFT
        
        # Convert back to integer coordinate space
        final_x = int(rotated_x_fp)
        final_y = int(rotated_y_fp)
        
        # Check if the point is within image boundaries
        if final_x < 0 or final_x >= FIELD_WIDTH or final_y < 0 or final_y >= FIELD_HEIGHT:
            continue
        
        transformed_x.append(final_x)
        transformed_y.append(final_y)
    
    # Create visualization
    plt.figure(figsize=(10, 8))
    plt.scatter(transformed_x, transformed_y, s=2, c='blue', alpha=0.7)
    
    # Mark the center (0,0 in the new coordinate system)
    plt.scatter([0], [0], s=100, c='red', marker='x')
    
    # Add field boundaries
    plt.axhline(y=0, color='green', linestyle='-', alpha=0.3)
    plt.axhline(y=FIELD_HEIGHT-1, color='green', linestyle='-', alpha=0.3)
    plt.axvline(x=0, color='green', linestyle='-', alpha=0.3)
    plt.axvline(x=FIELD_WIDTH-1, color='green', linestyle='-', alpha=0.3)
    
    # Configure plot
    plt.xlim(-50, FIELD_WIDTH+50)
    plt.ylim(-50, FIELD_HEIGHT+50)
    plt.grid(True, alpha=0.3)
    plt.title(f'Transformed Field Coordinates\nGuess: ({args.guess_x}, {args.guess_y}, {args.guess_heading:.2f} rad)')
    plt.xlabel('X Coordinate')
    plt.ylabel('Y Coordinate')
    
    # Save the plot
    plt.savefig('transformed_field.png', dpi=300)
    plt.show()
    
    print(f"Transformed {len(transformed_x)} points out of {WHITE_LINES_LENGTH}")

def load_white_lines():
    """Load the white line coordinates from the array in field.hpp"""
    white_lines = [
        [-126, -156], [-123, -156], [-120, -156], [-117, -156], [-114, -156], [-110, -156], [-107, -156], [-104, -156], 
        [-101, -156], [-98, -156], [-94, -156], [-91, -156], [-88, -156], [-85, -156], [-82, -156], [-78, -156], 
        [-75, -156], [-72, -156], [-69, -156], [-66, -156], [-62, -156], [-59, -156], [-56, -156], [-53, -156], 
        [-50, -156], [-46, -156], [-43, -156], [-40, -156], [-37, -156], [-34, -156], [-30, -156], [-27, -156], 
        [-24, -156], [-21, -156], [-18, -156], [-14, -156], [-11, -156], [-8, -156], [-5, -156], [-2, -156], 
        [2, -156], [5, -156], [8, -156], [11, -156], [14, -156], [18, -156], [21, -156], [24, -156], 
        [27, -156], [30, -156], [34, -156], [37, -156], [40, -156], [43, -156], [46, -156], [50, -156], 
        [53, -156], [56, -156], [59, -156], [62, -156], [66, -156], [69, -156], [72, -156], [75, -156], 
        [78, -156], [82, -156], [85, -156], [88, -156], [91, -156], [94, -156], [98, -156], [101, -156], 
        [104, -156], [107, -156], [110, -156], [114, -156], [117, -156], [120, -156], [123, -156], [-126, -154], 
        [-123, -154], [-120, -154], [-117, -154], [-114, -154], [-110, -154], [-107, -154], [-104, -154], [-101, -154], 
        [-98, -154], [-94, -154], [-91, -154], [-88, -154], [-85, -154], [-82, -154], [-78, -154], [-75, -154], 
        [-72, -154], [-69, -154], [-66, -154], [-62, -154], [-59, -154], [-56, -154], [-53, -154], [-50, -154], 
        [-46, -154], [-43, -154], [-40, -154], [-37, -154], [-34, -154], [-30, -154], [-27, -154], [-24, -154], 
        [-21, -154], [-18, -154], [-14, -154], [-11, -154], [-8, -154], [-5, -154], [-2, -154], [2, -154], 
        [5, -154], [8, -154], [11, -154], [14, -154], [18, -154], [21, -154], [24, -154], [27, -154], 
        [30, -154], [34, -154], [37, -154], [40, -154], [43, -154], [46, -154], [50, -154], [53, -154], 
        [56, -154], [59, -154], [62, -154], [66, -154], [69, -154], [72, -154], [75, -154], [78, -154], 
        [82, -154], [85, -154], [88, -154], [91, -154], [94, -154], [98, -154], [101, -154], [104, -154], 
        [107, -154], [110, -154], [114, -154], [117, -154], [120, -154], [123, -154], [-126, -153], [-64, -153], 
        [61, -153], [123, -153], [-126, -151], [-64, -151], [61, -151], [123, -151], [-126, -150], [-64, -150], 
        [61, -150], [123, -150], [-126, -148], [-64, -148], [61, -148], [123, -148], [-126, -146], [-64, -146], 
        [61, -146], [123, -146], [-126, -145], [-64, -145], [61, -145], [123, -145], [-126, -143], [-64, -143], 
        [61, -143], [123, -143], [-126, -142], [-64, -142], [61, -142], [123, -142], [-126, -140], [-64, -140], 
        [61, -140], [123, -140], [-126, -138], [-64, -138], [61, -138], [123, -138], [-126, -137], [-64, -137], 
        [61, -137], [123, -137], [-126, -135], [-62, -135], [123, -135], [-126, -134], [-62, -134], [123, -134], 
        [-126, -132], [-62, -132], [123, -132], [-126, -130], [-62, -130], [123, -130], [-126, -129], [-61, -129], 
        [123, -129], [-126, -127], [-61, -127], [123, -127], [-126, -126], [-59, -126], [123, -126], [-126, -124], 
        [-59, -124], [123, -124], [-126, -122], [-58, -122], [123, -122], [-126, -121], [-56, -121], [123, -121], 
        [-126, -119], [-54, -119], [51, -119], [123, -119], [-126, -118], [-51, -118], [48, -118], [123, -118], 
        [-126, -116], [-48, -116], [-45, -116], [-42, -116], [-38, -116], [-35, -116], [-32, -116], [-29, -116], 
        [-26, -116], [-22, -116], [-19, -116], [-16, -116], [-13, -116], [-10, -116], [-6, -116], [-3, -116], 
        [0, -116], [3, -116], [6, -116], [10, -116], [13, -116], [16, -116], [19, -116], [22, -116], 
        [26, -116], [29, -116], [32, -116], [35, -116], [38, -116], [42, -116], [45, -116], [123, -116], 
        [-126, -114], [-42, -114], [-38, -114], [-35, -114], [-32, -114], [-29, -114], [-26, -114], [-22, -114], 
        [-19, -114], [-16, -114], [-13, -114], [-10, -114], [-6, -114], [-3, -114], [0, -114], [3, -114], 
        [6, -114], [10, -114], [13, -114], [16, -114], [19, -114], [22, -114], [26, -114], [29, -114], 
        [32, -114], [35, -114], [38, -114], [123, -114], [-126, -113], [123, -113], [-126, -111], [123, -111], 
        [-126, -110], [123, -110], [-126, -108], [123, -108], [-126, -106], [123, -106], [-126, -105], [123, -105], 
        [-126, -103], [123, -103], [-126, -102], [123, -102], [-126, -100], [123, -100], [-126, -98], [123, -98], 
        [-126, -97], [123, -97], [-126, -95], [123, -95], [-126, -94], [123, -94], [-126, -92], [123, -92], 
        [-126, -90], [123, -90], [-126, -89], [123, -89], [-126, -87], [123, -87], [-126, -86], [123, -86], 
        [-126, -84], [123, -84], [-126, -82], [123, -82], [-126, -81], [123, -81], [-126, -79], [123, -79], 
        [-126, -78], [123, -78], [-126, -76], [123, -76], [-126, -74], [123, -74], [-126, -73], [123, -73], 
        [-126, -71], [123, -71], [-126, -70], [123, -70], [-126, -68], [123, -68], [-126, -66], [123, -66], 
        [-126, -65], [123, -65], [-126, -63], [123, -63], [-126, -62], [123, -62], [-126, -60], [123, -60], 
        [-126, -58], [123, -58], [-126, -57], [123, -57], [-126, -55], [123, -55], [-126, -54], [123, -54], 
        [-126, -52], [123, -52], [-126, -50], [123, -50], [-126, -49], [123, -49], [-126, -47], [123, -47], 
        [-126, -46], [123, -46], [-126, -44], [123, -44], [-126, -42], [123, -42], [-126, -41], [123, -41], 
        [-126, -39], [123, -39], [-126, -38], [123, -38], [-126, -36], [123, -36], [-126, -34], [123, -34], 
        [-126, -33], [123, -33], [-126, -31], [123, -31], [-126, -30], [123, -30], [-126, -28], [123, -28], 
        [-126, -26], [123, -26], [-126, -25], [123, -25], [-126, -23], [123, -23], [-126, -22], [123, -22], 
        [-126, -20], [123, -20], [-126, -18], [123, -18], [-126, -17], [123, -17], [-126, -15], [123, -15], 
        [-126, -14], [123, -14], [-126, -12], [123, -12], [-126, -10], [123, -10], [-126, -9], [123, -9], 
        [-126, -7], [123, -7], [-126, -6], [123, -6], [-126, -4], [123, -4], [-126, -2], [123, -2], 
        [-126, -1], [123, -1], [-126, 1], [123, 1], [-126, 2], [123, 2], [-126, 4], [123, 4], 
        [-126, 6], [123, 6], [-126, 7], [123, 7], [-126, 9], [123, 9], [-126, 10], [123, 10], 
        [-126, 12], [123, 12], [-126, 14], [123, 14], [-126, 15], [123, 15], [-126, 17], [123, 17], 
        [-126, 18], [123, 18], [-126, 20], [123, 20], [-126, 22], [123, 22], [-126, 23], [123, 23], 
        [-126, 25], [123, 25], [-126, 26], [123, 26], [-126, 28], [123, 28], [-126, 30], [123, 30], 
        [-126, 31], [123, 31], [-126, 33], [123, 33], [-126, 34], [123, 34], [-126, 36], [123, 36], 
        [-126, 38], [123, 38], [-126, 39], [123, 39], [-126, 41], [123, 41], [-126, 42], [123, 42], 
        [-126, 44], [123, 44], [-126, 46], [123, 46], [-126, 47], [123, 47], [-126, 49], [123, 49], 
        [-126, 50], [123, 50], [-126, 52], [123, 52], [-126, 54], [123, 54], [-126, 55], [123, 55], 
        [-126, 57], [123, 57], [-126, 58], [123, 58], [-126, 60], [123, 60], [-126, 62], [123, 62], 
        [-126, 63], [123, 63], [-126, 65], [123, 65], [-126, 66], [123, 66], [-126, 68], [123, 68], 
        [-126, 70], [123, 70], [-126, 71], [123, 71], [-126, 73], [123, 73], [-126, 74], [123, 74], 
        [-126, 76], [123, 76], [-126, 78], [123, 78], [-126, 79], [123, 79], [-126, 81], [123, 81], 
        [-126, 82], [123, 82], [-126, 84], [123, 84], [-126, 86], [123, 86], [-126, 87], [123, 87], 
        [-126, 89], [123, 89], [-126, 90], [123, 90], [-126, 92], [123, 92], [-126, 94], [123, 94], 
        [-126, 95], [123, 95], [-126, 97], [123, 97], [-126, 98], [123, 98], [-126, 100], [123, 100], 
        [-126, 102], [123, 102], [-126, 103], [123, 103], [-126, 105], [123, 105], [-126, 106], [123, 106], 
        [-126, 108], [123, 108], [-126, 110], [123, 110], [-126, 111], [123, 111], [-126, 113], [-42, 113], 
        [-38, 113], [-35, 113], [-32, 113], [-29, 113], [-26, 113], [-22, 113], [-19, 113], [-16, 113], 
        [-13, 113], [-10, 113], [-6, 113], [-3, 113], [0, 113], [3, 113], [6, 113], [10, 113], 
        [13, 113], [16, 113], [19, 113], [22, 113], [26, 113], [29, 113], [32, 113], [35, 113], 
        [38, 113], [123, 113], [-126, 114], [-48, 114], [-45, 114], [-42, 114], [-38, 114], [-35, 114], 
        [-32, 114], [-29, 114], [-26, 114], [-22, 114], [-19, 114], [-16, 114], [-13, 114], [-10, 114], 
        [-6, 114], [-3, 114], [0, 114], [3, 114], [6, 114], [10, 114], [13, 114], [16, 114], 
        [19, 114], [22, 114], [26, 114], [29, 114], [32, 114], [35, 114], [38, 114], [42, 114], 
        [45, 114], [123, 114], [-126, 116], [-51, 116], [48, 116], [123, 116], [-126, 118], [-54, 118], 
        [51, 118], [123, 118], [-126, 119], [-56, 119], [123, 119], [-126, 121], [-58, 121], [123, 121], 
        [-126, 122], [-59, 122], [123, 122], [-126, 124], [-59, 124], [123, 124], [-126, 126], [-61, 126], 
        [123, 126], [-126, 127], [-61, 127], [123, 127], [-126, 129], [-62, 129], [123, 129], [-126, 130], 
        [-62, 130], [123, 130], [-126, 132], [-62, 132], [123, 132], [-126, 134], [-62, 134], [123, 134], 
        [-126, 135], [-64, 135], [61, 135], [123, 135], [-126, 137], [-64, 137], [61, 137], [123, 137], 
        [-126, 138], [-64, 138], [61, 138], [123, 138], [-126, 140], [-64, 140], [61, 140], [123, 140], 
        [-126, 142], [-64, 142], [61, 142], [123, 142], [-126, 143], [-64, 143], [61, 143], [123, 143], 
        [-126, 145], [-64, 145], [61, 145], [123, 145], [-126, 146], [-64, 146], [61, 146], [123, 146], 
        [-126, 148], [-64, 148], [61, 148], [123, 148], [-126, 150], [-64, 150], [61, 150], [123, 150], 
        [-126, 151], [-64, 151], [61, 151], [123, 151], [-126, 153], [-123, 153], [-120, 153], [-117, 153], 
        [-114, 153], [-110, 153], [-107, 153], [-104, 153], [-101, 153], [-98, 153], [-94, 153], [-91, 153], 
        [-88, 153], [-85, 153], [-82, 153], [-78, 153], [-75, 153], [-72, 153], [-69, 153], [-66, 153], 
        [-62, 153], [-59, 153], [-56, 153], [-53, 153], [-50, 153], [-46, 153], [-43, 153], [-40, 153], 
        [-37, 153], [-34, 153], [-30, 153], [-27, 153], [-24, 153], [-21, 153], [-18, 153], [-14, 153], 
        [-11, 153], [-8, 153], [-5, 153], [-2, 153], [2, 153], [5, 153], [8, 153], [11, 153], 
        [14, 153], [18, 153], [21, 153], [24, 153], [27, 153], [30, 153], [34, 153], [37, 153], 
        [40, 153], [43, 153], [46, 153], [50, 153], [53, 153], [56, 153], [59, 153], [62, 153], 
        [66, 153], [69, 153], [72, 153], [75, 153], [78, 153], [82, 153], [85, 153], [88, 153], 
        [91, 153], [94, 153], [98, 153], [101, 153], [104, 153], [107, 153], [110, 153], [114, 153], 
        [117, 153], [120, 153], [123, 153], [-126, 154], [-123, 154], [-120, 154], [-117, 154], [-114, 154], 
        [-110, 154], [-107, 154], [-104, 154], [-101, 154], [-98, 154], [-94, 154], [-91, 154], [-88, 154], 
        [-85, 154], [-82, 154], [-78, 154], [-75, 154], [-72, 154], [-69, 154], [-66, 154], [-62, 154], 
        [-59, 154], [-56, 154], [-53, 154], [-50, 154], [-46, 154], [-43, 154], [-40, 154], [-37, 154], 
        [-34, 154], [-30, 154], [-27, 154], [-24, 154], [-21, 154], [-18, 154], [-14, 154], [-11, 154], 
        [-8, 154], [-5, 154], [-2, 154], [2, 154], [5, 154], [8, 154], [11, 154], [14, 154], 
        [18, 154], [21, 154], [24, 154], [27, 154], [30, 154], [34, 154], [37, 154], [40, 154], 
        [43, 154], [46, 154], [50, 154], [53, 154], [56, 154], [59, 154], [62, 154], [66, 154], 
        [69, 154], [72, 154], [75, 154], [78, 154], [82, 154], [85, 154], [88, 154], [91, 154], 
        [94, 154], [98, 154], [101, 154], [104, 154], [107, 154], [110, 154], [114, 154], [117, 154], 
        [120, 154], [123, 154]
    ]
    return white_lines

if __name__ == "__main__":
    main()